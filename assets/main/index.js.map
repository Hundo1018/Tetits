{"version":3,"sources":["../file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/file:/C:/ProgramData/cocos/editors/Creator/3.8.2/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/D:/project/Tetits/assets/Intents/file:/D:/project/Tetits/assets/Intents/Intents.ts","../file:/D:/project/Tetits/assets/Systems/file:/D:/project/Tetits/assets/Systems/TetitsModel.ts","../file:/D:/project/Tetits/assets/Systems/file:/D:/project/Tetits/assets/Systems/TetitsView.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Node","_dec3","_dec4","_descriptor","_applyDecoratedDescriptor","_class2","_Component","DebugViewRuntimeControl","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","_inheritsLoose","_proto","prototype","start","this","node","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","console","error","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","onLoad","update","deltaTime","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","IntentEnum","Intents","PlayerIntent","EventTarget","input","Input","KEY_DOWN","onKeyDown","event","keyCode","KeyCode","ARROW_LEFT","emit","MoveLeft","ARROW_RIGHT","MoveRight","ARROW_DOWN","SoftDrop","SPACE","HardDrop","KEY_Z","RotateL","KEY_C","RotateR","ARROW_UP","Hold","onDestroy","off","UpdateEnum","Tetromino","CCFloat","_dec5","Size","TetitsModel","Updated","lockDelayTimer","lockDelayTimerMax","gravityCounter","_descriptor4","board","handlingTetromino","_this2","size","fill","map","intent","onMoveLeft","onMoveRight","onRotateL","onRotateR","onSoftDrop","onHardDrop","onHold","thisArgs","hardDrop","tryMove","Vec2","tryRotateR","tryRotateL","gravityPeriod","gravityDrop","BoardUpdate","tryPlaceTetromino","tetromino","_this3","isLegal","shape","position","forEach","row","cell","placeTetromino","Error","checkClearLines","getNextTetromino","clearLines","every","splice","unshift","some","_proto2","tryRotate","vec","nextPosition","clone","add","direction","_this4","nextShape","wallKick","wallKickData","boardWidth","boardHeight","newX","newY","Prefab","TetitsView","ViewBoard","model","onBoardUpdate","undefined","tetrominoPrefab","setParent","thisArg","previewBoardArr","previewBoard","innerboard","log"],"mappings":"4kBACA,IAAQA,EAAsBC,EAAtBD,QAASE,EAAaD,EAAbC,sCAGmBC,EADnCH,EAAQ,oCAAmCI,EAEvCF,EAASG,GAAKC,EAEdJ,EAASG,GAAKE,EAEdL,EAASG,GAAKF,GALmCK,EAAAC,GAKnCC,WAAAC,GAAA,SAAAC,IAAA,IAAA,IAAAC,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAkSd,OAlScN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,UAAAM,EAAAV,wBAAAL,EAAAgB,EAAAX,IAAAU,EAAAV,qBAAAY,EAAAD,EAAAX,IAAAU,EAAAV,iCAAAa,EAAAF,EAAAX,IAAAA,EAElBc,QAAkB,EAACd,EAERe,UAAsB,CAC1B,kBACA,eACA,gBACA,iBACA,iBACA,gBACA,YACA,MACA,MACA,cACA,gBACA,eAEA,kBACA,mBACA,oBACA,aACA,gBACA,iBACA,eACA,WACA,YACA,qBACA,MAEA,iBACA,kBACA,aACA,cACA,eACA,UACA,WACA,YACA,SACA,KAEA,UACA,0BACA,2BACA,uBACA,wBACA,eACA,2BACA,wBACA,eAEA,OACHf,EACOgB,aAAyB,CAC7B,iBACA,kBACA,cACA,eACA,WACA,YACA,SACA,KAEA,aACA,MAEA,eACA,mBAEA,UACA,mBACA,oBACA,oBACA,MACHhB,EACOiB,QAAoB,CACxB,uBACA,wBACHjB,EAEOkB,wBAAkC,GAAElB,EACpCmB,qBAA+B,GAAEnB,EACjCoB,mBAA6B,GAAEpB,EAC/BqB,kBAAgC,GAAErB,EAClCsB,mBAA8B,GAAEtB,EAChCuB,gBAA4B,GAAEvB,EAC9BwB,uBAAexB,EA8LfyB,mBAAqB,EAACzB,EACtB0B,SAAqB,CACzB,kBACA,kBACA,kBACA,kBACA,mBACH1B,EACO2B,MAAiB,CACrBC,EAAMC,MACND,EAAME,MACNF,EAAMG,IACNH,EAAMI,MACNJ,EAAMK,MACTjC,EAlSckC,EAAAnC,EAAAD,GAkSd,IAAAqC,EAAApC,EAAAqC,UAiBA,OAjBAD,EA3MDE,MAAA,WAGI,GADeC,KAAKC,KAAKC,OAAOC,aAAaC,GAC7C,CAKA,IAAMC,EAAcL,KAAKC,KAAKC,OAAOC,aAAaG,GAC5CC,EAAsC,GAApBF,EAAYG,MAC9BC,EAAwC,GAArBJ,EAAYK,OAEjCC,EAAyC,GAAlBJ,EAAlBA,EAAyCK,EAAIH,EAAsC,GAAnBA,EAInEI,EAAWb,KAAKC,KAAKa,eAAe,YACpCC,EAAaC,EAAYH,GAC/BE,EAAWb,OAASF,KAAKC,KACzBc,EAAWE,KAAO,UAClB,IAAMC,EAAYF,EAAYH,GAC9BK,EAAUhB,OAASF,KAAKC,KACxBiB,EAAUD,KAAO,SAGjB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAWJ,EAAYhB,KAAKqB,6BAA6BP,eAAe,UAC9EM,EAASE,YAAYX,GAAKQ,EAAI,EAAI,IAAiB,KAAMP,EAAG,GAC5DQ,EAASG,SAAS,IAAM,IAAM,KAC9BH,EAASlB,OAASgB,EAClB,IAAMM,EAAiBJ,EAASjB,aAAasB,GAC7CD,EAAeE,OAASP,EAAI,qCAAuC,kCACnEK,EAAenC,MAAQC,EAAMC,MAC7BiC,EAAeG,SAAW,EAC1B3B,KAAKhB,mBAAmBgB,KAAKhB,mBAAmBnB,QAAU2D,EAG9DZ,GAxB4B,GA2B5B,IADA,IAAIgB,EAAa,EACRT,EAAI,EAAGA,EAAInB,KAAKvB,UAAUZ,OAAQsD,IAAKS,IAAc,CACtDT,IAAMnB,KAAKvB,UAAUZ,QAAU,IAC/B8C,GA7BM,IA8BNiB,EAAa,GAEjB,IAAMC,EAAUV,EAAIH,EAAYhB,KAAK8B,kBAAoB9B,KAAK8B,iBAC9DD,EAAQP,YAAYX,EAAGC,EAjCC,GAiCYgB,EAAY,GAChDC,EAAQN,SAAS,GAAK,GAAK,IAC3BM,EAAQ3B,OAASF,KAAK8B,iBAAiB5B,OAEvC,IAAM6B,EAAgBF,EAAQG,uBAAuBC,GACrDF,EAAcL,OAAS1B,KAAKvB,UAAU0C,GACtCnB,KAAKjB,kBAAkBiB,KAAKjB,kBAAkBlB,QAAUkE,EACxD/B,KAAKf,gBAAgBe,KAAKf,gBAAgBpB,QAAUkE,EAAcL,OAElEG,EAAQK,GAAGC,EAAOC,UAAUC,OAAQrC,KAAKsC,iBAAkBtC,MAE3DA,KAAKnB,qBAAqBsC,GAAKU,EAGnClB,GA/Cc,IAiDdX,KAAKqB,6BAA6BC,YAAYX,EAAI,GAAIC,EAAG,GACzDZ,KAAKqB,6BAA6BE,SAAS,GAAK,GAAK,IACrDvB,KAAKqB,6BAA6Ba,GAAGK,EAAOH,UAAUI,MAAOxC,KAAKyC,uBAAwBzC,MAC1FA,KAAKqB,6BAA6BnB,OAASa,EAC3C,IAAIS,EAAiBxB,KAAKqB,6BAA6BW,uBAAuBP,GAC9EzB,KAAKhB,mBAAmBgB,KAAKhB,mBAAmBnB,QAAU2D,EAE1D,IAAMkB,EAAoB1B,EAAYhB,KAAKqB,8BAC3CqB,EAAkBpB,YAAYX,EAAI,GAAIC,EAAG,GACzC8B,EAAkBnB,SAAS,GAAK,GAAK,IACrCmB,EAAkBR,GAAGK,EAAOH,UAAUI,MAAOxC,KAAK2C,gBAAiB3C,MACnE0C,EAAkBxC,OAASa,GAC3BS,EAAiBkB,EAAkBV,uBAAuBP,IAC3CC,OAAS,YACxB1B,KAAKhB,mBAAmBgB,KAAKhB,mBAAmBnB,QAAU2D,EAE1D,IAAMoB,EAAa5B,EAAYhB,KAAKqB,8BACpCuB,EAAWtB,YAAYX,EAAI,IAAKC,EAAG,GACnCgC,EAAWrB,SAAS,GAAK,GAAK,IAC9BqB,EAAWV,GAAGK,EAAOH,UAAUI,MAAOxC,KAAK6C,OAAQ7C,MACnD4C,EAAW1C,OAASF,KAAKC,KAAKC,QAC9BsB,EAAiBoB,EAAWZ,uBAAuBP,IACpCC,OAAS,UACxB1B,KAAKhB,mBAAmBgB,KAAKhB,mBAAmBnB,QAAU2D,EAC1DxB,KAAKd,gBAAkBsC,EAGvBZ,GAAK,GACL,IAAK,IAAIO,EAAI,EAAGA,EAAInB,KAAKrB,QAAQd,OAAQsD,IAAK,CAC1C,IAAMU,EAAUb,EAAYhB,KAAK8C,qBACjCjB,EAAQP,YAAYX,EAAGC,EA/EC,GA+EYO,EAAG,GACvCU,EAAQN,SAAS,GAAK,GAAK,IAC3BM,EAAQ3B,OAASW,EAEjB,IAAMkB,EAAgBF,EAAQG,uBAAuBC,GACrDF,EAAcL,OAAS1B,KAAKrB,QAAQwC,GACpCnB,KAAKjB,kBAAkBiB,KAAKjB,kBAAkBlB,QAAUkE,EACxD/B,KAAKf,gBAAgBe,KAAKf,gBAAgBpB,QAAUkE,EAAcL,OAE1CG,EAAQ1B,aAAagC,GAC7BY,YAAY5B,EAC5BU,EAAQK,GAAGC,EAAOC,UAAUC,OAAQlB,EAAInB,KAAKgD,yBAA2BhD,KAAKiD,oBAAqBjD,MAClGA,KAAKlB,mBAAmBqC,GAAKU,EAIjCjB,GAAK,IACL,IAAK,IAAIO,EAAI,EAAGA,EAAInB,KAAKtB,aAAab,OAAQsD,IAAK,CAC/C,IAAMU,EAAUV,EAAIH,EAAYhB,KAAK8C,qBAAuB9C,KAAK8C,oBACjEjB,EAAQP,YAAYX,EAAGC,EAlGC,GAkGYO,EAAG,GACvCU,EAAQN,SAAS,GAAK,GAAK,IAC3BM,EAAQ3B,OAASF,KAAK8C,oBAAoB5C,OAE1C,IAAM6B,EAAgBF,EAAQG,uBAAuBC,GACrDF,EAAcL,OAAS1B,KAAKtB,aAAayC,GACzCnB,KAAKjB,kBAAkBiB,KAAKjB,kBAAkBlB,QAAUkE,EACxD/B,KAAKf,gBAAgBe,KAAKf,gBAAgBpB,QAAUkE,EAAcL,OAElEG,EAAQK,GAAGC,EAAOC,UAAUC,OAAQrC,KAAKkD,oBAAqBlD,MAE9DA,KAAKpB,wBAAwBuC,GAAKU,QAtHlCsB,QAAQC,MAAM,yDAwHrBvD,EAEDwD,cAAA,SAAcC,EAAQC,GAClB,IAAIC,EAAW,IAAIC,OAAOH,GACpBI,EAAYF,EAASG,OAAO,KAClC,OAAmB,IAAfD,EACOJ,IAAWC,GAGlBC,GADAA,EAAWA,EAASI,OAAOF,EAAY,IACnBE,OAAO,EAAGJ,EAASG,OAAO,SAC1BJ,GAE3B1D,EACDyC,iBAAA,SAAiBuB,GAGb,IAFA,IAAMC,EAAYC,EAASC,KAAMF,UAC3B/B,EAAgB8B,EAAO7B,uBAAuBC,GAC3Cd,EAAI,EAAGA,EAAInB,KAAKvB,UAAUZ,OAAQsD,IACnCnB,KAAKqD,cAActB,EAAcL,OAAQ1B,KAAKvB,UAAU0C,MACxD2C,EAAUG,WAAa9C,IAGlCtB,EACDqD,oBAAA,SAAoBW,GAGhB,IAFA,IAAMC,EAAYC,EAASC,KAAMF,UAC3B/B,EAAgB8B,EAAO7B,uBAAuBC,GAC3Cd,EAAI,EAAGA,EAAInB,KAAKtB,aAAab,OAAQsD,IACtCnB,KAAKqD,cAActB,EAAcL,OAAQ1B,KAAKtB,aAAayC,KAC3D2C,EAAUI,oBAAoB/C,EAAG0C,EAAOd,YAGnDlD,EACDmD,yBAAA,SAAyBa,GACHE,EAASC,KAAMF,UACvBK,mBAAqBN,EAAOd,WACzClD,EACDoD,oBAAA,SAAoBY,GACEE,EAASC,KAAMF,UACvBM,mBAAqBP,EAAOd,WACzClD,EACD4C,uBAAA,SAAuB4B,GACnB,IAAMP,EAAYC,EAASC,KAAMF,UACjCA,EAAUrB,wBAAuB,GACjC,IAAK,IAAItB,EAAI,EAAGA,EAAInB,KAAKpB,wBAAwBf,OAAQsD,IAAK,CAClCnB,KAAKpB,wBAAwBuC,GAAGhB,aAAagC,GACrDY,WAAY,EAGhC,IAAIuB,EAAkBtE,KAAKlB,mBAAmB,GAAGqB,aAAagC,GAC9DmC,EAAgBvB,WAAY,EAC5Be,EAAUM,oBAAqB,GAC/BE,EAAkBtE,KAAKlB,mBAAmB,GAAGqB,aAAagC,IAC1CY,WAAY,EAC5Be,EAAUK,oBAAqB,GAClCtE,EACDgD,OAAA,SAAOwB,GACH,IAAMnD,EAAYlB,KAAKC,KAAKa,eAAe,UACrCyD,GAAerD,EAAUsD,OAC/BxE,KAAKnB,qBAAqB,GAAGqB,OAAOsE,OAASD,EAC7CvE,KAAKlB,mBAAmB,GAAGoB,OAAOsE,OAASD,EAC3CvE,KAAKpB,wBAAwB,GAAGsB,OAAOsE,OAASD,EAChDvE,KAAKqB,6BAA6BnB,OAAOsE,OAASD,EAClDrD,EAAUsD,OAASD,EACnBvE,KAAKd,gBAAgBwC,OAAS6C,EAAc,UAAY,WAC3D1E,EAiBD8C,gBAAA,SAAgB0B,GACZrE,KAAKb,qBACDa,KAAKb,oBAAsBa,KAAKZ,SAASvB,SACzCmC,KAAKb,mBAAqB,GAE9B,IAAK,IAAIgC,EAAI,EAAGA,EAAInB,KAAKjB,kBAAkBlB,OAAQsD,IAC/CnB,KAAKjB,kBAAkBoC,GAAGO,OAAS1B,KAAKZ,SAASY,KAAKb,oBAAsBa,KAAKf,gBAAgBkC,GAAK,WAE1G,IAAK,IAAIA,EAAI,EAAGA,EAAInB,KAAKhB,mBAAmBnB,OAAQsD,IAChDnB,KAAKhB,mBAAmBmC,GAAG9B,MAAQW,KAAKX,MAAMW,KAAKb,qBAE1DU,EAED4E,OAAA,aACC5E,EACD6E,OAAA,SAAOC,KACNlH,GAxTwCmH,IAAS9E,iCAAA7C,IAAA4H,gBAAAC,cAAAC,YAAAC,uBAAA,OAEf,QAAI1G,EAAAhB,EAAAC,EAAAuC,8BAAA3C,IAAA0H,gBAAAC,cAAAC,YAAAC,uBAAA,OAEP,QAAIzG,EAAAjB,EAAAC,EAAAuC,0CAAA1C,IAAAyH,gBAAAC,cAAAC,YAAAC,uBAAA,OAEQ,QAD7BC,EACiC1H,KAAA0H,MAmTnDC,IAAAC;;uWC5TD,IAAQtI,EAAsBC,EAAtBD,QAEIuI,GAFkBtI,EAAbC,iCAELqI,GAAU,OAAVA,EAAAA,uBAAAA,EAAAA,uBAAAA,EAAAA,yBAAAA,EAAAA,2BAAAA,EAAAA,yBAAAA,EAAAA,yBAAAA,EAAAA,iBAAAA,EAAAA,qBAAAA,qBAUXvI,EAAQ,UAAUG,CAAAiI,WAAAzH,GAAA,SAAA6H,IAAA,IAAA,IAAA3H,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAEqC,OAFrCN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,WAERwH,aAA4B,IAAIC,EAAa7H,EAFrCkC,EAAAyF,EAAA7H,GAEqC,IAAAqC,EAAAwF,EAAAvF,UAgCnD,OAhCmDD,EAEpD4E,OAAA,WACIe,EAAMtD,GAAGuD,EAAMrD,UAAUsD,SAAU1F,KAAK2F,UAAW3F,OACtDH,EACD8F,UAAA,SAAUC,GACN,OAAQA,EAAMC,SACV,KAAKC,EAAQC,WACT/F,KAAKsF,aAAaU,KAAKZ,EAAWa,UAClC,MACJ,KAAKH,EAAQI,YACTlG,KAAKsF,aAAaU,KAAKZ,EAAWe,WAClC,MACJ,KAAKL,EAAQM,WACTpG,KAAKsF,aAAaU,KAAKZ,EAAWiB,UAClC,MACJ,KAAKP,EAAQQ,MACTtG,KAAKsF,aAAaU,KAAKZ,EAAWmB,UAClC,MACJ,KAAKT,EAAQU,MACTxG,KAAKsF,aAAaU,KAAKZ,EAAWqB,SAClC,MACJ,KAAKX,EAAQY,MACT1G,KAAKsF,aAAaU,KAAKZ,EAAWuB,SAClC,MACJ,KAAKb,EAAQc,SACT5G,KAAKsF,aAAaU,KAAKZ,EAAWyB,QAG7ChH,EACDiH,UAAA,WACItB,EAAMuB,IAAItB,EAAMrD,UAAUsD,SAAU1F,KAAK2F,UAAW3F,OACvDqF,GAjCwBT,KAASK,KAkCrCC,IAAAC;;;;uhBC9CD,IAAQtI,EAAsBC,EAAtBD,QAASE,EAAaD,EAAbC,SAELiK,0BAAAA,GAAU,OAAVA,EAAAA,+BAAAA,QA0JCC,oBArJWjK,EADvBH,EAAQ,eAAcI,EAIlBF,EAASsI,GAAQlI,EAIjBJ,EAASmK,GAAQ9J,EAKjBL,EAASmK,GAAQC,EAOjBpK,EAASqK,GAAKpK,GAnBuBK,EAAAC,GAmBvBC,WAAAC,GAAA,SAAA6J,IAAA,IAAA,IAAA3J,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAQE,OARFN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,WAlBRwJ,QAAuB,IAAI/B,EAAanH,EAAAV,WAAAL,EAAAgB,EAAAX,IAK/CU,EAAAV,sBAAAY,EAAAD,EAAAX,IAAAA,EAGO6J,eAAyB7J,EAAK8J,kBAErCpJ,EAAAV,kBAAAa,EAAAF,EAAAX,IAIAA,EACQ+J,eAAyB,EAEjCrJ,EAAAV,SAAAgK,EAAArJ,EAAAX,IAIAA,EACAiK,MAAoB,GAGpBjK,EACAkK,yBAAiBlK,EARFkC,EAAAyH,EAAA7J,GAQE,IAAAqC,EAAAwH,EAAAvH,UAsHhB,OAtHgBD,EAEjB4E,OAAA,WAAe,IAAAoD,OACX7H,KAAKuH,eAAiBvH,KAAKwH,kBAC3BxH,KAAK2H,MAAQ,IAAI5J,MAAMiC,KAAK8H,KAAKpH,QAAQqH,KAAK,GAAGC,KAAI,WAAA,OAAM,IAAIjK,MAAM8J,EAAKC,KAAKtH,OAAOuH,KAAK,MAC3F/H,KAAK4H,kBAAoB,IAAIX,EAAU,CACnC,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACRjH,KAAK2H,OACX3H,KAAKD,SACRF,EACDE,MAAA,WACIC,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWa,SAAUjG,KAAKkI,WAAYlI,MAClEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWe,UAAWnG,KAAKmI,YAAanI,MACpEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWqB,QAASzG,KAAKoI,UAAWpI,MAChEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWuB,QAAS3G,KAAKqI,UAAWrI,MAChEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWiB,SAAUrG,KAAKsI,WAAYtI,MAClEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWmB,SAAUvG,KAAKuI,WAAYvI,MAClEA,KAAKiI,OAAO3C,aAAapD,GAAGkD,EAAWyB,KAAM7G,KAAKwI,OAAQxI,OAC7DH,EACD2I,OAAA,SAAO3B,EAAkB2B,EAAaC,KACrC5I,EACD0I,WAAA,SAAWhC,EAAsBgC,EAAiBE,GAC9CzI,KAAK4H,kBAAkBc,YAC1B7I,EACDyI,WAAA,SAAWjC,EAAsBiC,EAAiBG,GAC9CzI,KAAK4H,kBAAkBe,QAAQ,IAAIC,EAAK,EAAG,KAC9C/I,EACDwI,UAAA,SAAU1B,EAAqB0B,EAAgBI,GAC3CzI,KAAK4H,kBAAkBiB,cAC1BhJ,EACDuI,UAAA,SAAU3B,EAAqB2B,EAAgBK,GAC3CzI,KAAK4H,kBAAkBkB,cAC1BjJ,EACDsI,YAAA,SAAYhC,EAAuBgC,EAAkBM,GACjDzI,KAAK4H,kBAAkBe,QAAQ,IAAIC,EAAK,EAAG,KAC9C/I,EACDqI,WAAA,SAAWjC,EAAsBiC,EAAiBO,GAC9CzI,KAAK4H,kBAAkBe,QAAQ,IAAIC,GAAM,EAAG,KAC/C/I,EAID6E,OAAA,SAAOC,GAEH3E,KAAKyH,gBAAkB9C,EACnB3E,KAAKyH,gBAAkBzH,KAAK+I,gBAC5B/I,KAAKyH,eAAiB,EACtBzH,KAAKgJ,eAEThJ,KAAKsH,QAAQtB,KAAKgB,EAAWiC,YAAYjJ,KAAK2H,MAAM3H,KAAK4H,oBAQ7D/H,EACQqJ,kBAAR,SAA0BC,GAA+B,IAAAC,OACrD,QAAID,EAAUE,QAAQF,EAAUG,MAAOH,EAAUI,YAC7CJ,EAAUG,MAAME,SAAQ,SAACC,EAAK7I,GAC1B6I,EAAID,SAAQ,SAACE,EAAM/I,GACH,GAAR+I,IACAN,EAAKzB,MAAMwB,EAAUI,SAAS3I,EAAIA,GAAGuI,EAAUI,SAAS5I,EAAIA,GAAK+I,KAEtEN,OAEA,IAMfvJ,EACQ8J,eAAR,SAAuBR,GACnB,IAAKnJ,KAAKkJ,kBAAkBC,GACxB,MAAM,IAAIS,MAAM,2BAIxB/J,EACQmJ,YAAR,WACShJ,KAAK4H,kBAAkBe,QAAQ,IAAIC,EAAK,EAAG,MACxC5I,KAAKuH,gBAAkB,GACvBvH,KAAK2J,eAAe3J,KAAK4H,mBACzB5H,KAAK6J,kBACL7J,KAAKuH,eAAiBvH,KAAKwH,kBAC3BxH,KAAK4H,kBAAoB5H,KAAK8J,oBAE9B9J,KAAKuH,mBAKjB1H,EACQgK,gBAAR,WAEI,IADA,IAAIE,EAAa,EACRnJ,EAAI,EAAGA,EAAIZ,KAAK2H,MAAM9J,OAAQ+C,IAC/BZ,KAAK2H,MAAM/G,GAAGoJ,OAAM,SAAAN,GAAI,OAAY,GAARA,OAC5B1J,KAAK2H,MAAMsC,OAAOrJ,EAAG,GACrBZ,KAAK2H,MAAMuC,QAAQ,IAAInM,MAAM,IAAIgK,KAAK,IACtCgC,KAGR,OAAOA,GAGXlK,EACQiK,iBAAR,WACI,OAAO,IAAI7C,EAAU,CACjB,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACRjH,KAAK2H,QACdN,GAjJ4BzC,IAAS9E,oBAAA7C,IAAA4H,gBAAAC,cAAAC,YAAAC,mBAAA1G,EAAAhB,EAAAC,EAAAuC,+BAAA3C,IAAA0H,gBAAAC,cAAAC,YAAAC,uBAAA,OAQH,KAACzG,EAAAjB,EAAAC,EAAAuC,2BAAA1C,IAAAyH,gBAAAC,cAAAC,YAAAC,uBAAA,OAKL,KAAC0C,EAAApK,EAAAC,EAAAuC,kBAAAqH,IAAAtC,gBAAAC,cAAAC,YAAAC,uBAAA,OAOZ,IAAIoC,EAAK,GAAI,OADlBnC,EACqB1H,KAAA0H,6BAkIpC,SAAAgC,EAAmBqC,EAAmB3B,GAClC,GASJ3H,KACQ2H,MAAoB,GAC5B3H,KACOsJ,MAAoB,GAI3BtJ,KACOuJ,SAAiB,IAAIX,EAAK,EAAG,GAjBZ,GAAhBU,EAAMzL,QAAeyL,EAAMa,MAAK,SAAAV,GAAG,OAAkB,GAAdA,EAAI5L,UAC3C,MAAM,IAAI+L,MAAM,qBAEpB,GAAIjC,EAAM9J,OAAS,IAAM8J,EAAM,GAAG9J,OAAS,GACvC,MAAM,IAAI+L,MAAM,gCAEpB5J,KAAKsJ,MAAQA,EACbtJ,KAAK2H,MAAQA,EAChB,IAAAyC,EAAAnD,EAAAnH,UAkGA,OAvFDsK,EACOtB,WAAP,WACI,OAAO9I,KAAKqK,WAAW,IAG3BD,EACOvB,WAAP,WACI,OAAO7I,KAAKqK,UAAU,IAG1BD,EACOzB,QAAP,SAAe2B,GACX,IAAIC,EAAevK,KAAKuJ,SAASiB,QAAQC,IAAIH,GAC7C,QAAItK,KAAKqJ,QAAQrJ,KAAKsJ,MAAOiB,KACzBvK,KAAKuJ,SAAWgB,GACT,IAKfH,EACQC,UAAR,SAAkBK,GAA4B,IAAAC,OACtCC,EAAY5K,KAAKsJ,MAAMtB,KAAI,SAACyB,EAAK7I,GAAC,OAClC6I,EAAIzB,KAAI,SAAC0B,EAAM/I,GAAC,OAAKgK,EAAKrB,MAAoB,IAAdoB,EAAmBC,EAAKrB,MAAMzL,OAAS,EAAI8C,EAAKA,GAAiB,IAAd+J,EAAkB9J,EAAK+J,EAAKrB,MAAMzL,OAAS,EAAI+C,SACtI,OAAIZ,KAAKqJ,QAAQuB,EAAW5K,KAAKuJ,WAC7BvJ,KAAKsJ,MAAQsB,GACN,KAEH5K,KAAK6K,SAASD,IAO1BR,EACQS,SAAR,SAAiBD,GAOb,IANA,IAAIE,EAAe,CACf,CAAC,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,GAAI,IAC1C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACtC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IACvC,CAAC,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,KAEpC3J,EAAI,EAAGA,EAAI2J,EAAajN,OAAQsD,IAAK,CAC1C,IAAI0J,EAAWC,EAAa3J,GACxBoJ,EAAevK,KAAKuJ,SAASiB,QAAQC,IAAI,IAAI7B,EAAKiC,EAAS,GAAG,GAAIA,EAAS,GAAG,KAClF,GAAI7K,KAAKqJ,QAAQuB,EAAWL,GAGxB,OAFAvK,KAAKuJ,SAAWgB,EAChBvK,KAAKsJ,MAAQsB,GACN,EAGf,OAAO,GAOXR,EACOf,QAAP,SAAeC,EAAmBC,GAI9B,IAHA,IAAMwB,EAAa/K,KAAK2H,MAAM,GAAG9J,OAC3BmN,EAAchL,KAAK2H,MAAM9J,OAEtB+C,EAAI,EAAGA,EAAI0I,EAAMzL,OAAQ+C,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI2I,EAAM1I,GAAG/C,OAAQ8C,IACjC,GAAmB,GAAf2I,EAAM1I,GAAGD,GAAb,CAEA,IAAMsK,EAAO1B,EAAS5I,EAAIA,EACpBuK,EAAO3B,EAAS3I,EAAIA,EAC1B,GAAIqK,EAAO,GAAKA,GAAQF,GAAcG,EAAO,GAAKA,GAAQF,EACtD,OAAO,EACX,GAA+B,IAA3BhL,KAAK2H,MAAMuD,GAAMD,GACjB,OAAO,EAInB,OAAO,GAMXb,EACO1B,SAAP,WACI,KAAO1I,KAAK2I,QAAQ,IAAIC,EAAK,EAAG,QAEnC3B,SAKJ/B,IAAAC;;8fC7QD,IAAQtI,EAAsBC,EAAtBD,QAASE,EAAaD,EAAbC,yBAGMC,EADtBH,EAAQ,cAAaI,EAGjBF,EAASoO,GAAOhO,EAGhBJ,EAASsK,GAAYrK,GALeK,EAAAC,GAKfC,WAAAC,GAAA,SAAA4N,IAAA,IAAA,IAAA1N,EAAAC,EAAAC,UAAAC,OAAAC,MAAAC,MAAAJ,GAAAK,IAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAGE,OAHFN,EAAAF,EAAAS,KAAAC,MAAAV,SAAAW,OAAAL,UAAAM,EAAAV,oBAAAL,EAAAgB,EAAAX,IAAAU,EAAAV,UAAAY,EAAAD,EAAAX,IAAAA,EAGtB2N,UAAsB,GAAE3N,EAHFkC,EAAAwL,EAAA5N,GAGE,IAAAqC,EAAAuL,EAAAtL,UAuDvB,OAvDuBD,EAExBE,MAAA,WACIC,KAAKsL,MAAMhE,QAAQpF,GAAG8E,EAAWiC,YAAYjJ,KAAKuL,cAAevL,MAEjE,IAAK,IAAIY,EAAI,EAAGA,EAAIZ,KAAKsL,MAAMxD,KAAKpH,OAAQE,IACxC,IAAK,IAAID,EAAI,EAAGA,EAAIX,KAAKsL,MAAMxD,KAAKtH,MAAOG,IACd6K,MAArBxL,KAAKqL,UAAUzK,KACfZ,KAAKqL,UAAUzK,GAAK,IAEI4K,MAAxBxL,KAAKqL,UAAUzK,GAAGD,KAClBX,KAAKqL,UAAUzK,GAAGD,GAAKK,EAAYhB,KAAKyL,iBACxCzL,KAAKqL,UAAUzK,GAAGD,GAAG+K,UAAU1L,KAAKC,MACpCD,KAAKqL,UAAUzK,GAAGD,GAAGW,YAAgB,GAAJX,EAAa,IAAJC,GAC1CZ,KAAKqL,UAAUzK,GAAGD,GAAG6D,QAAS,IAI7C3E,EAED6E,OAAA,SAAOC,KAEN9E,EACO0L,cAAR,SAAsB5D,EAAmBC,EAA+B+D,GAGpE,IADA,IAAIC,EAAkB5L,KAAK6L,aAAalE,EAAOC,GACtChH,EAAI,EAAGA,EAAIgL,EAAgB/N,OAAQ+C,IACxC,IAAK,IAAID,EAAI,EAAGA,EAAIiL,EAAgBhL,GAAG/C,OAAQ8C,IACd,GAAzBiL,EAAgBhL,GAAGD,GACnBX,KAAKqL,UAAUzK,GAAGD,GAAG6D,QAAS,EAE9BxE,KAAKqL,UAAUzK,GAAGD,GAAG6D,QAAS,GAI7C3E,EAEOgM,aAAR,SAAqBlE,EAAkBC,GAAwC,IAAAC,OAEvEgE,EAAelE,EAAMK,KAAI,SAAA8D,GAAU,SAAA3N,OAAQ2N,MAW/C,OAVAlE,EAAkB0B,MAAME,SAAQ,SAACC,EAAK7I,GAClC6I,EAAID,SAAQ,SAACE,EAAM/I,GACH,GAAR+I,IACAmC,EACCjE,EAAkB2B,SAAS3I,EAAIA,GAC/BgH,EAAkB2B,SAAS5I,EAAIA,GAAK+I,KAE1C7B,MAEP1E,QAAQ4I,IAXkB,IAYnBF,GACVhM,EAESiH,UAAV,WACI9G,KAAKsL,MAAMhE,QAAQP,IAAIC,EAAWiC,YAAYjJ,KAAKuL,cAAcvL,OACpEoL,GA/D2BxG,IAAS9E,6BAAA7C,IAAA4H,gBAAAC,cAAAC,YAAAC,uBAAA,OAGX,QAAI1G,EAAAhB,EAAAC,EAAAuC,mBAAA3C,IAAA0H,gBAAAC,cAAAC,YAAAC,uBAAA,OAGT,QADCC,EACG1H,KAAA0H,MA0D5BC,IAAAC","file":"all.js","sourcesContent":["import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import { _decorator, Component, Event, EventKeyboard, EventTarget, EventTouch, input, Input, KeyCode, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum IntentEnum {\r\n    RotateL,\r\n    RotateR,\r\n    MoveLeft,\r\n    MoveRight,\r\n    SoftDrop,\r\n    HardDrop,\r\n    Hold,\r\n    Update,\r\n}\r\n@ccclass('Intents')\r\nexport class Intents extends Component {\r\n    public PlayerIntent: EventTarget = new EventTarget();\r\n\r\n    onLoad(): void {\r\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    }\r\n    onKeyDown(event: EventKeyboard) {\r\n        switch (event.keyCode) {\r\n            case KeyCode.ARROW_LEFT:\r\n                this.PlayerIntent.emit(IntentEnum.MoveLeft);\r\n                break;\r\n            case KeyCode.ARROW_RIGHT:\r\n                this.PlayerIntent.emit(IntentEnum.MoveRight);\r\n                break;\r\n            case KeyCode.ARROW_DOWN:\r\n                this.PlayerIntent.emit(IntentEnum.SoftDrop);\r\n                break;\r\n            case KeyCode.SPACE:\r\n                this.PlayerIntent.emit(IntentEnum.HardDrop);\r\n                break;\r\n            case KeyCode.KEY_Z:\r\n                this.PlayerIntent.emit(IntentEnum.RotateL);\r\n                break;\r\n            case KeyCode.KEY_C:\r\n                this.PlayerIntent.emit(IntentEnum.RotateR);\r\n                break;\r\n            case KeyCode.ARROW_UP:\r\n                this.PlayerIntent.emit(IntentEnum.Hold);\r\n                break;\r\n        }\r\n    }\r\n    onDestroy(): void {\r\n        input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Canvas, CCFloat, CCInteger, Component, debug, director, EventInfo, instantiate, log, math, Node, Prefab, Size, Sprite, v3, Vec2, Vec3, EventTarget, Quat } from 'cc';\r\nimport { IntentEnum, Intents } from '../Intents/Intents';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum UpdateEnum {\r\n    BoardUpdate,\r\n}\r\n\r\n@ccclass('TetitsModel')\r\nexport class TetitsModel extends Component {\r\n    public Updated: EventTarget = new EventTarget();\r\n\r\n    @property(Intents)\r\n    private intent: Intents;\r\n\r\n    //LockDelay的計時器\r\n    @property(CCFloat)\r\n    public lockDelayTimerMax: number = 0;\r\n    public lockDelayTimer: number = this.lockDelayTimerMax;\r\n\r\n    //下落的週期，單位為秒\r\n    @property(CCFloat)\r\n    public gravityPeriod: number = 3;\r\n\r\n    //下落的時間計數器，到達gravityPeriod時會下落，並歸零\r\n    private gravityCounter: number = 0;\r\n\r\n    //遊戲棋盤大小\r\n    @property(Size)\r\n    public size: Size = new Size(10, 20);\r\n    //邏輯相關\r\n    //遊戲棋盤放置已成定局的盤面\r\n    board: number[][] = [];\r\n\r\n\r\n    //目前正在操作的方塊\r\n    handlingTetromino: Tetromino;\r\n\r\n    onLoad(): void {\r\n        this.lockDelayTimer = this.lockDelayTimerMax;\r\n        this.board = new Array(this.size.height).fill(0).map(() => new Array(this.size.width).fill(0));\r\n        this.handlingTetromino = new Tetromino([\r\n            [0, 0, 0, 0,],\r\n            [1, 1, 1, 0,],\r\n            [0, 1, 0, 0,],\r\n            [0, 0, 0, 0,],]\r\n            , this.board);\r\n        this.start();\r\n    }\r\n    start() {\r\n        this.intent.PlayerIntent.on(IntentEnum.MoveLeft, this.onMoveLeft, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.MoveRight, this.onMoveRight, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.RotateL, this.onRotateL, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.RotateR, this.onRotateR, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.SoftDrop, this.onSoftDrop, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.HardDrop, this.onHardDrop, this);\r\n        this.intent.PlayerIntent.on(IntentEnum.Hold, this.onHold, this);\r\n    }\r\n    onHold(Hold: IntentEnum, onHold: any, thisArgs: this) {\r\n    }\r\n    onHardDrop(HardDrop: IntentEnum, onHardDrop: any, thisArgs: this) {\r\n        this.handlingTetromino.hardDrop();\r\n    }\r\n    onSoftDrop(SoftDrop: IntentEnum, onSoftDrop: any, thisArgs: this) {\r\n        this.handlingTetromino.tryMove(new Vec2(0, 1));\r\n    }\r\n    onRotateR(RotateR: IntentEnum, onRotateR: any, thisArgs: this) {\r\n        this.handlingTetromino.tryRotateR();\r\n    }\r\n    onRotateL(RotateL: IntentEnum, onRotateL: any, thisArgs: this) {\r\n        this.handlingTetromino.tryRotateL();\r\n    }\r\n    onMoveRight(MoveRight: IntentEnum, onMoveRight: any, thisArgs: this) {\r\n        this.handlingTetromino.tryMove(new Vec2(1, 0));\r\n    }\r\n    onMoveLeft(MoveLeft: IntentEnum, onMoveLeft: any, thisArgs: this) {\r\n        this.handlingTetromino.tryMove(new Vec2(-1, 0));\r\n    }\r\n\r\n\r\n    \r\n    update(deltaTime: number) {\r\n        //依照時間更新\r\n        this.gravityCounter += deltaTime;\r\n        if (this.gravityCounter >= this.gravityPeriod) {\r\n            this.gravityCounter = 0;\r\n            this.gravityDrop();\r\n        }\r\n        this.Updated.emit(UpdateEnum.BoardUpdate,this.board,this.handlingTetromino);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //檢查是否可以放置到棋盤上\r\n    //如果可以放置，則放置並回傳true，否則回傳false\r\n    private tryPlaceTetromino(tetromino: Tetromino): boolean {\r\n        if (tetromino.isLegal(tetromino.shape, tetromino.position)) {\r\n            tetromino.shape.forEach((row, y) => {\r\n                row.forEach((cell, x) => {\r\n                    if (cell != 0) {\r\n                        this.board[tetromino.position.y + y][tetromino.position.x + x] = cell;\r\n                    }\r\n                }, this);\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    //將方塊放置在棋盤上\r\n    private placeTetromino(tetromino: Tetromino): void {\r\n        if (!this.tryPlaceTetromino(tetromino)) {\r\n            throw new Error(\"Cannot place tetromino\");\r\n        }\r\n    }\r\n    \r\n    //重力下落，如果無法下落則放置，在放置前會檢查是否有LockDelay\r\n    private gravityDrop(): void {\r\n        if (!this.handlingTetromino.tryMove(new Vec2(0, 1))) {\r\n            if (this.lockDelayTimer <= 0) {\r\n                this.placeTetromino(this.handlingTetromino);\r\n                this.checkClearLines();\r\n                this.lockDelayTimer = this.lockDelayTimerMax;\r\n                this.handlingTetromino = this.getNextTetromino();\r\n            } else {\r\n                this.lockDelayTimer--;\r\n            }\r\n        }\r\n    }\r\n\r\n    //在新放置的方塊區域，檢查是否有滿行，並消除，上方的方塊下降，並回傳消除的行數\r\n    private checkClearLines(): number {\r\n        let clearLines = 0;\r\n        for (let y = 0; y < this.board.length; y++) {\r\n            if (this.board[y].every(cell => cell != 0)) {\r\n                this.board.splice(y, 1);\r\n                this.board.unshift(new Array(10).fill(0));\r\n                clearLines++;\r\n            }\r\n        }\r\n        return clearLines;\r\n    }\r\n\r\n    //得到下一個方塊\r\n    private getNextTetromino(): Tetromino {\r\n        return new Tetromino([\r\n            [0, 0, 0, 0,],\r\n            [1, 1, 1, 0,],\r\n            [0, 1, 0, 0,],\r\n            [0, 0, 0, 0,],]\r\n            , this.board);\r\n    }\r\n}\r\n\r\n\r\nexport class Tetromino {\r\n    public constructor(shape: number[][], board: number[][]) {\r\n        if (shape.length != 4 || shape.some(row => row.length != 4)) {\r\n            throw new Error(\"Shape must be 4x4\");\r\n        }\r\n        if (board.length < 10 || board[0].length < 10) {\r\n            throw new Error(\"Board must be at least 10x10\");\r\n        }\r\n        this.shape = shape;\r\n        this.board = board;\r\n    }\r\n    //方塊的盤面，0為空\r\n    private board: number[][] = [];\r\n    //4x4的方塊，0為空\r\n    public shape: number[][] = []\r\n\r\n\r\n\r\n    //方塊的位置，LeftTop為(0,0)\r\n    public position: Vec2 = new Vec2(0, 0);\r\n\r\n    //嘗試旋轉方塊，如果成功則旋轉並回傳true，否則回傳false\r\n    public tryRotateL(): boolean {\r\n        return this.tryRotate(-1);\r\n    }\r\n\r\n    //嘗試旋轉方塊，如果成功則旋轉並回傳true，否則回傳false\r\n    public tryRotateR(): boolean {\r\n        return this.tryRotate(1);\r\n    }\r\n\r\n    //嘗試移動方塊，如果成功則移動並回傳true，否則回傳false\r\n    public tryMove(vec: Vec2): boolean {\r\n        let nextPosition = this.position.clone().add(vec);\r\n        if (this.isLegal(this.shape, nextPosition)) {\r\n            this.position = nextPosition;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //嘗試旋轉方塊，如果失敗則進行WallKick檢查，如果還是失敗則不旋轉\r\n    private tryRotate(direction: number): boolean {\r\n        let nextShape = this.shape.map((row, y) =>\r\n            row.map((cell, x) => this.shape[direction === 1 ? (this.shape.length - 1 - x) : x][direction === 1 ? y : (this.shape.length - 1 - y)]));\r\n        if (this.isLegal(nextShape, this.position)) {\r\n            this.shape = nextShape;\r\n            return true;\r\n        } else {\r\n            if (this.wallKick(nextShape)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //WallKick檢查，如果可以則進行WallKick，規則為最寬鬆且最符合直覺的規則\r\n    private wallKick(nextShape: number[][]): boolean {\r\n        let wallKickData = [\r\n            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]],\r\n            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]],\r\n            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],\r\n            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]],\r\n        ];\r\n        for (let i = 0; i < wallKickData.length; i++) {\r\n            let wallKick = wallKickData[i];\r\n            let nextPosition = this.position.clone().add(new Vec2(wallKick[0][0], wallKick[0][1]));\r\n            if (this.isLegal(nextShape, nextPosition)) {\r\n                this.position = nextPosition;\r\n                this.shape = nextShape;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //檢查移動是否合法(沒有與其他方塊重疊，沒有超出邊界)\r\n    public isLegal(shape: number[][], position: Vec2): boolean {\r\n        const boardWidth = this.board[0].length;\r\n        const boardHeight = this.board.length;\r\n\r\n        for (let y = 0; y < shape.length; y++) {\r\n            for (let x = 0; x < shape[y].length; x++) {\r\n                if (shape[y][x] == 0)\r\n                    continue;\r\n                const newX = position.x + x;\r\n                const newY = position.y + y;\r\n                if (newX < 0 || newX >= boardWidth || newY < 0 || newY >= boardHeight)\r\n                    return false;\r\n                if (this.board[newY][newX] !== 0)\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n    //快速掉落方塊\r\n    public hardDrop(): void {\r\n        while (this.tryMove(new Vec2(0, 1))) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\r\nimport { TetitsModel, UpdateEnum,Tetromino } from './TetitsModel';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TetitsView')\r\nexport class TetitsView extends Component {\r\n\r\n    @property(Prefab)\r\n    tetrominoPrefab: Prefab = null!;\r\n\r\n    @property(TetitsModel)\r\n    model: TetitsModel = null!;\r\n    \r\n    ViewBoard: Node[][] = [];\r\n\r\n    start() {\r\n        this.model.Updated.on(UpdateEnum.BoardUpdate,this.onBoardUpdate, this);\r\n\r\n        for (let y = 0; y < this.model.size.height; y++) {\r\n            for (let x = 0; x < this.model.size.width; x++) {\r\n                if (this.ViewBoard[y] == undefined) {\r\n                    this.ViewBoard[y] = [];\r\n                }\r\n                if (this.ViewBoard[y][x] == undefined) {\r\n                    this.ViewBoard[y][x] = instantiate(this.tetrominoPrefab);\r\n                    this.ViewBoard[y][x].setParent(this.node);\r\n                    this.ViewBoard[y][x].setPosition(x * 32, -y * 32);\r\n                    this.ViewBoard[y][x].active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n    private onBoardUpdate(board: number[][], handlingTetromino: Tetromino,  thisArg: this): void {\r\n        \r\n        let previewBoardArr = this.previewBoard(board, handlingTetromino);\r\n        for (let y = 0; y < previewBoardArr.length; y++) {\r\n            for (let x = 0; x < previewBoardArr[y].length; x++) {\r\n                if (previewBoardArr[y][x] == 0) {\r\n                    this.ViewBoard[y][x].active = false;\r\n                } else {\r\n                    this.ViewBoard[y][x].active = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private previewBoard(board:number[][], handlingTetromino:Tetromino):number[][] {\r\n        let boardOutPut: String = \"\";\r\n        let previewBoard = board.map(innerboard => [...innerboard]);\r\n        handlingTetromino.shape.forEach((row, y) => {\r\n            row.forEach((cell, x) => {\r\n                if (cell != 0) {\r\n                    previewBoard\r\n                    [handlingTetromino.position.y + y]\r\n                    [handlingTetromino.position.x + x] = cell;\r\n                }\r\n            }, this);\r\n        });\r\n        console.log(boardOutPut);\r\n        return previewBoard;\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.model.Updated.off(UpdateEnum.BoardUpdate,this.onBoardUpdate,this);\r\n    }\r\n}\r\n\r\n\r\n"]}